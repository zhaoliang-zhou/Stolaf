{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Markov Chain Inverse Problem","version":"0.3.2","provenance":[{"file_id":"1sOMS2MVL1DPEw5L3R5b4fu28myygunOD","timestamp":1556124620941}],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"metadata":{"id":"YlR500LuLfRV","colab_type":"text"},"cell_type":"markdown","source":["# Markov Chain Inverse Problem\n","\n","_Math 242 Modern Computational Math_"]},{"metadata":{"id":"zFkxHre_RQ8Y","colab_type":"code","colab":{}},"cell_type":"code","source":["import numpy as np"],"execution_count":0,"outputs":[]},{"metadata":{"id":"Kb2XP8C8Lj7R","colab_type":"text"},"cell_type":"markdown","source":["## Build your own Markov chain transition matrix\n","\n","Suppose we want to construct a transition matrix for a Markov chain that has a given steady-state vector. We will examine one way to do this.\n","\n","Assume there are $n$ states, and the steady-state vector has the values\n","\n","$$ p = (p_0, p_1, \\ldots, p_{n-1}).$$\n","\n","The steps to construct the transition matrix $P$ are the following:\n","\n","1. Select a $n \\times n$ _proposal transition matrix_ $Q$. The entries in $Q$ should be positive numbers, and each column should sum to $1$. It is helpful, but not essential, that $Q$ is symmetric, that is, $Q_{i,j} = Q_{j,i}$ for all indices.\n","2. Given states $S_j$ and $S_i$ with $i\\ne j$, define the transition probability $P_{i,j}$:\n","  * If $p_j \\le p_i$, then $P_{i,j} = Q_{i,j}$.\n","  * If $p_j > p_i$, then $P_{i,j} = \\frac{p_i}{p_j} Q_{j,i}$.\n","3. Define $P_{i,i} = 1− \\sum_{k \\ne i} P_{k,i}$. (This makes each column of $P$ add up to 1.)\n","\n","That’s all there is to it! It can be shown that this produces a transition matrix $P$ with eigenvector $p$ corresponding to eigenvalue $1$."]},{"metadata":{"id":"Z6BtDT--Q5ee","colab_type":"text"},"cell_type":"markdown","source":["## Example\n","\n","We will create a Markov chain on $n=3$ states with $p = (1/6, 1/3, 1/2)$ as the steady-state vector."]},{"metadata":{"id":"UipjKHLvKy5z","colab_type":"code","colab":{}},"cell_type":"code","source":["p = np.array([1/6, 1/3, 1/2])\n"],"execution_count":0,"outputs":[]},{"metadata":{"id":"oyOflWFCRc6u","colab_type":"text"},"cell_type":"markdown","source":["### Step 1: The proposal transition matrix $Q$\n","\n","We will use the simplest proposal transition matrix:\n","\n","$$Q = \\left[ \\begin{array}{ccc} \\frac{1}{3} & \\frac{1}{3} & \\frac{1}{3} \\\\ \\frac{1}{3} & \\frac{1}{3} & \\frac{1}{3} \\\\ \\frac{1}{3} & \\frac{1}{3} & \\frac{1}{3} \\end{array} \\right] $$\n","\n","In Python, we can use `numpy.full((n, m), value)` to create a `n`-by-`m` matrix of a specified size, with each entry set to `value`."]},{"metadata":{"id":"Ez2Ng2GoR-sW","colab_type":"code","outputId":"fb9674df-a9df-4289-bda5-38878b04e45e","executionInfo":{"status":"ok","timestamp":1556502074928,"user_tz":300,"elapsed":308,"user":{"displayName":"Zhaoliang Zhou","photoUrl":"","userId":"11420802199847110781"}},"colab":{"base_uri":"https://localhost:8080/","height":70}},"cell_type":"code","source":["Q = np.full((3,3), 1/3)\n","Q"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0.33333333, 0.33333333, 0.33333333],\n","       [0.33333333, 0.33333333, 0.33333333],\n","       [0.33333333, 0.33333333, 0.33333333]])"]},"metadata":{"tags":[]},"execution_count":67}]},{"metadata":{"id":"xSD0WswTS4U-","colab_type":"text"},"cell_type":"markdown","source":["### Step 2: Create the transition matrix $P$\n","\n","Now we will create the actual transition matrix $P$. We will first create a zero matrix, then set the entries to the correct values."]},{"metadata":{"id":"7uEzEeUUSzzW","colab_type":"code","outputId":"e290a70f-8180-4801-82c8-8af1f89652c1","executionInfo":{"status":"ok","timestamp":1556502076981,"user_tz":300,"elapsed":285,"user":{"displayName":"Zhaoliang Zhou","photoUrl":"","userId":"11420802199847110781"}},"colab":{"base_uri":"https://localhost:8080/","height":70}},"cell_type":"code","source":["P = np.zeros((3,3))\n","P"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0., 0., 0.],\n","       [0., 0., 0.],\n","       [0., 0., 0.]])"]},"metadata":{"tags":[]},"execution_count":68}]},{"metadata":{"id":"OaVuuvA-TLnt","colab_type":"text"},"cell_type":"markdown","source":["Since $S_0$ has the smallest steady-state probability ($p_0 = 1/6$), we set\n","$$P_{1,0} = Q_{1,0}$$\n","$$P_{2,0} = Q_{2,0}$$\n","and\n","$$P_{0,0} = 1 - (P_{1,0} + P_{2,0}).$$\n","In Python, that is:"]},{"metadata":{"id":"39o4mT2YTLFj","colab_type":"code","outputId":"da891701-e940-48aa-a4cb-bfb723e9dbfc","executionInfo":{"status":"ok","timestamp":1556502079791,"user_tz":300,"elapsed":290,"user":{"displayName":"Zhaoliang Zhou","photoUrl":"","userId":"11420802199847110781"}},"colab":{"base_uri":"https://localhost:8080/","height":70}},"cell_type":"code","source":["P[1,0] = Q[1,0]\n","P[2,0] = Q[2,0]\n","P[0,0] = 1 - (P[1,0] + P[2,0])\n","P"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0.33333333, 0.        , 0.        ],\n","       [0.33333333, 0.        , 0.        ],\n","       [0.33333333, 0.        , 0.        ]])"]},"metadata":{"tags":[]},"execution_count":69}]},{"metadata":{"id":"fuacARpFVkpo","colab_type":"text"},"cell_type":"markdown","source":["For $S_1$, only $S_0$ has a lower probability. Thus:\n","$$P_{0,1} = \\frac{p_0}{p_1}Q_{1,0} $$\n","$$P_{2,1} = Q_{2,1}$$\n","$$P_{1,1} = 1 - (P_{0,1} + P_{2,1})$$\n","In Python, that is:"]},{"metadata":{"id":"25FEu2J5TI_9","colab_type":"code","outputId":"d5cd5d92-f1e2-4f3e-9c6e-8376be08d617","executionInfo":{"status":"ok","timestamp":1556502085182,"user_tz":300,"elapsed":304,"user":{"displayName":"Zhaoliang Zhou","photoUrl":"","userId":"11420802199847110781"}},"colab":{"base_uri":"https://localhost:8080/","height":70}},"cell_type":"code","source":["P[0,1] = p[0]*Q[1,0]/p[1]\n","P[2,1] = Q[2,1]\n","P[1,1] = 1 - (P[0,1] + P[2,1])\n","P"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0.33333333, 0.16666667, 0.        ],\n","       [0.33333333, 0.5       , 0.        ],\n","       [0.33333333, 0.33333333, 0.        ]])"]},"metadata":{"tags":[]},"execution_count":70}]},{"metadata":{"id":"VxLrV9m_YNCS","colab_type":"text"},"cell_type":"markdown","source":["Lastly, since $S_2$ has the largest steady-state probability:\n","$$P_{0,2} = \\frac{p_0}{p_2}Q_{2,0}$$\n","$$P_{1,2} = \\frac{p_1}{p_2}Q_{2,1}$$\n","$$P_{2,2} = 1 - (P_{0,2} + P_{1,2})$$\n","In Python, that is:"]},{"metadata":{"id":"HlEgV3XBYLnM","colab_type":"code","outputId":"9169f53f-8f78-4179-8a61-9a92508d43f3","executionInfo":{"status":"ok","timestamp":1556502092702,"user_tz":300,"elapsed":327,"user":{"displayName":"Zhaoliang Zhou","photoUrl":"","userId":"11420802199847110781"}},"colab":{"base_uri":"https://localhost:8080/","height":70}},"cell_type":"code","source":["P[0,2] = p[0]*Q[2,0]/p[2]\n","P[1,2] = p[1]*Q[2,1]/p[2]\n","P[2,2] = 1- (P[0,2] + P[1,2])\n","P"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0.33333333, 0.16666667, 0.11111111],\n","       [0.33333333, 0.5       , 0.22222222],\n","       [0.33333333, 0.33333333, 0.66666667]])"]},"metadata":{"tags":[]},"execution_count":71}]},{"metadata":{"id":"QOxVQ5BJaSTk","colab_type":"text"},"cell_type":"markdown","source":["Thus, we have our transition matrix $P$."]},{"metadata":{"id":"DpN0_13Laag2","colab_type":"text"},"cell_type":"markdown","source":["### Check the steady-state vector\n","\n","We will compute the eigenvalues and eigenvectors of $P$."]},{"metadata":{"id":"kjdyM0NyaO9i","colab_type":"code","outputId":"2ebb5c18-e233-4ee4-cc72-fdb00665f46f","executionInfo":{"status":"ok","timestamp":1556502094673,"user_tz":300,"elapsed":334,"user":{"displayName":"Zhaoliang Zhou","photoUrl":"","userId":"11420802199847110781"}},"colab":{"base_uri":"https://localhost:8080/","height":87}},"cell_type":"code","source":["eigenStuff = np.linalg.eig(P)\n","eigenStuff"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(array([1.        , 0.16666667, 0.33333333]),\n"," array([[-2.67261242e-01, -7.07106781e-01, -2.67261242e-01],\n","        [-5.34522484e-01,  7.07106781e-01, -5.34522484e-01],\n","        [-8.01783726e-01, -4.36086947e-16,  8.01783726e-01]]))"]},"metadata":{"tags":[]},"execution_count":72}]},{"metadata":{"id":"HeL00K_6atNL","colab_type":"text"},"cell_type":"markdown","source":["We see that $1$ is an eigenvalue, as expected. The corresponding eigenvector is:"]},{"metadata":{"id":"CXOANsjJapui","colab_type":"code","outputId":"1bfbbdc3-4ae4-420d-93bc-5eefc7e124bf","executionInfo":{"status":"ok","timestamp":1556502097326,"user_tz":300,"elapsed":311,"user":{"displayName":"Zhaoliang Zhou","photoUrl":"","userId":"11420802199847110781"}},"colab":{"base_uri":"https://localhost:8080/","height":35}},"cell_type":"code","source":["v = eigenStuff[1][:,0]\n","v = v/np.sum(v)\n","v"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0.16666667, 0.33333333, 0.5       ])"]},"metadata":{"tags":[]},"execution_count":73}]},{"metadata":{"id":"wzyHNC2aasAv","colab_type":"text"},"cell_type":"markdown","source":["These are the steady-state probabilities!"]},{"metadata":{"id":"UPoHHXMGbHpg","colab_type":"text"},"cell_type":"markdown","source":["Note that you can also obtain the steady-state distribution by multiplying a high power of the matrix $P$ by an arbitrary (nonzero) starting distribution:"]},{"metadata":{"id":"LkU8NgBUbTHo","colab_type":"code","outputId":"87f83c1b-ceee-48d1-a7f1-06f470adcdda","executionInfo":{"status":"ok","timestamp":1556502098190,"user_tz":300,"elapsed":293,"user":{"displayName":"Zhaoliang Zhou","photoUrl":"","userId":"11420802199847110781"}},"colab":{"base_uri":"https://localhost:8080/","height":35}},"cell_type":"code","source":["np.linalg.matrix_power(P,100) @ np.array([1,0,0]) ## takes P to 100 power, the @ symp]bol is a matrix mulplication "],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0.16666667, 0.33333333, 0.5       ])"]},"metadata":{"tags":[]},"execution_count":74}]},{"metadata":{"id":"fALvGehKbkNV","colab_type":"text"},"cell_type":"markdown","source":["## A general method\n","\n","We can write some general code that produces a transition matrix $P$ from a steady-state vector $p$. "]},{"metadata":{"id":"ZuoxXqYNbZFz","colab_type":"code","colab":{}},"cell_type":"code","source":["def buildTransitionMatrix(p):\n","  # fix the number of states\n","  n = len(p)\n","\n","  # define the proposal transition matrix Q\n","  Q = np.full((n,n), 1/n)\n","\n","  # define P initially as a copy of Q\n","  P = Q.copy()\n","\n","  # loop over all columns\n","  for j in range(n):\n","    # loop over all rows\n","    for i in range(n):\n","      # skip the diagonal entries (for now)\n","      if i != j:\n","        # change P[i,j] if p[i] < p[j]\n","        if p[i] < p[j]:\n","          P[i,j] = Q[j,i]*p[i]/p[j]\n","\n","  # now fix the diagonal entries of P\n","  for i in range(n):\n","    P[i,i] = 1 - (np.sum(P[:,i]) - P[i,i])\n","  \n","  # return the transition matrix\n","  return P"],"execution_count":0,"outputs":[]},{"metadata":{"id":"5CpqGj1rdjR5","colab_type":"text"},"cell_type":"markdown","source":["Calling the function above with $p = (1/6, 1/3, 1/2)$ produces the same matrix as before."]},{"metadata":{"id":"GZvIktOybx2i","colab_type":"code","outputId":"4d631c9b-78a4-4012-f34d-55d1e159a260","executionInfo":{"status":"ok","timestamp":1556491978483,"user_tz":300,"elapsed":294,"user":{"displayName":"Zhaoliang Zhou","photoUrl":"","userId":"11420802199847110781"}},"colab":{"base_uri":"https://localhost:8080/","height":70}},"cell_type":"code","source":["P = buildTransitionMatrix(np.array([1/6, 1/3, 1/2]))\n","P"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0.33333333, 0.16666667, 0.11111111],\n","       [0.33333333, 0.5       , 0.22222222],\n","       [0.33333333, 0.33333333, 0.66666667]])"]},"metadata":{"tags":[]},"execution_count":15}]},{"metadata":{"id":"rX6oNhD_Jm28","colab_type":"code","outputId":"c7c8a977-0588-47b9-d2a6-e313f971ad29","executionInfo":{"status":"ok","timestamp":1556492014326,"user_tz":300,"elapsed":335,"user":{"displayName":"Zhaoliang Zhou","photoUrl":"","userId":"11420802199847110781"}},"colab":{"base_uri":"https://localhost:8080/","height":70}},"cell_type":"code","source":["PP = buildTransitionMatrix(np.array([1,2,3]))\n","PP"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0.33333333, 0.16666667, 0.11111111],\n","       [0.33333333, 0.5       , 0.22222222],\n","       [0.33333333, 0.33333333, 0.66666667]])"]},"metadata":{"tags":[]},"execution_count":19}]},{"metadata":{"id":"LGnDRy5YeeWb","colab_type":"text"},"cell_type":"markdown","source":["## Important Observation\n","\n","A nice feature of this construction is that the steady-state probabilities do not have to be _normalized_. In other words, you can multiply vector $p$ by any (nonzero) constant, and the matrix $P$ will be unchanged. This allows $p$ to be a vector of frequencies.\n","\n","For example, instead of $p = (1/6, 1/3, 1/2)$, we could use $p = (1, 2, 3)$ and obtain the same transition matrix.\n","\n","This is because the entries of $p$ only appear as ratios $p_i/p_j$ in the construction."]},{"metadata":{"id":"szbXX_l_foIL","colab_type":"text"},"cell_type":"markdown","source":["## Assignment\n","\n","Suppose we have nine states, arranged in a 3-by-3 grid:\n","\n","$$ \\begin{array}{|c|c|c|}\n"," \\hline\n"," S_1 & S_2 & S_3 \\\\\n"," \\hline\n"," S_4 & S_5 & S_6 \\\\\n"," \\hline\n"," S_7 & S_8 & S_9 \\\\\n"," \\hline\n"," \\end{array} $$\n"," \n"," _This is not the transition matrix! This is a diagram showing a geometric arrangement of nine states._\n","\n","The desired steady-state frequencies are:\n"," \n","$$ \\begin{array}{|c|c|c|}\n"," \\hline\n"," 1 & 2 & 1\\\\\n"," \\hline\n"," 2 & 4 & 2\\\\\n"," \\hline\n"," 1 & 2 & 1\\\\\n"," \\hline\n"," \\end{array} $$\n","\n","Notice that the frequencies add up to 16, not 1. \n","Given what we said above, this is OK.\n","However, if it makes you feel better, you may divide the frequencies by 16.\n","\n","### Your task: Construct a $9 \\times 9$ Markov chain transition matrix that has the desired steady-state distribution.\n","Do this under each of the following assumptions:\n","\n","#### 1. All moves allowed\n","\n","Start with any proposal transition matrix you like. \n","Find the transition matrix.\n","Then confirm you have a the right steady-state distribution in two ways:\n","\n","* Using eignvectors/eigenvalues.\n","* Starting with an arbitrary initial distribution (e.g., $S_1 = 1$, other $S_i = 0$), calculate the distribution after a large number of steps.\n","\n","#### 2. Only horizontal and vertical moves allowed.\n","\n","For each state in this Markov chain, it will be possible to move only to states that are adjacent horizontally or vertically in the diagram above.\n","Build this assumption into your proposal transition matrix $Q$, assuming that you can move to any adjacent state connected horizontally or vertically, or stay at the same state, with equal probability. \n","The probability of transition to any other state is $0$.\n","\n","For example, in the proposal transition matrix $Q$:\n","\n","* $S_1$ can move to $S_2$ or $S_4$, or stay at $S_1$, each with probability $1/3$.\n","* $S_2$ can move to $S_1$, $S_3$, or $S_5$, or stay at $S_2$, each with probability $1/4$.\n","* $S_5$ can move to $S_2$, $S_4$, $S_6$, or $S_8$, or stay at $S_5$, each with probability $1/5$.\n","\n","Does your transition matrix respect your assumption about the moves?\n","Confirm that you have the steady-state correct distribution.\n","\n","### 3. Horizontal, vertical, and diagonal moves are allowed\n","\n","Now assume that for each state in this Markov chain, it will be possible to move only to states that are adjacent horizontally, vertically, or diagonally in the diagram above.\n","Build this assumption into your transition matrix $Q$, and find the steady-state distribution.\n","Does your transition matrix respect your assumption about the moves?\n","Confirm that you have the steady-state correct distribution.\n","\n","\n","#### Submitting your work\n","\n","Submit a PDF of your solutions to \\#1, 2, and 3 to the [Markov chain inverse assignment on Moodle](https://moodle-2018-19.stolaf.edu/mod/assign/view.php?id=71490).\n","Make sure your work is clear, but it is not necessary to provide a lot of discussion about your answers.\n"]},{"metadata":{"id":"dJaE0NIksSM6","colab_type":"text"},"cell_type":"markdown","source":["## 1. All moves allowed"]},{"metadata":{"id":"JI5kJ25XsXq2","colab_type":"code","outputId":"d3f5ff34-6dfc-4e31-fc8d-fc4b94f0139d","executionInfo":{"status":"ok","timestamp":1556502119044,"user_tz":300,"elapsed":389,"user":{"displayName":"Zhaoliang Zhou","photoUrl":"","userId":"11420802199847110781"}},"colab":{"base_uri":"https://localhost:8080/","height":35}},"cell_type":"code","source":["p1 = np.array([1,2,1,2,4,2,1,2,1])\n","p1"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1, 2, 1, 2, 4, 2, 1, 2, 1])"]},"metadata":{"tags":[]},"execution_count":76}]},{"metadata":{"id":"eKMIjWBqsXtc","colab_type":"code","outputId":"3a83e7e1-7b7f-4dd0-c34b-4553205e9991","executionInfo":{"status":"ok","timestamp":1556502119889,"user_tz":300,"elapsed":306,"user":{"displayName":"Zhaoliang Zhou","photoUrl":"","userId":"11420802199847110781"}},"colab":{"base_uri":"https://localhost:8080/","height":334}},"cell_type":"code","source":["matrix1 = buildTransitionMatrix(p1)\n","matrix1 ##build a transition matrix"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0.11111111, 0.05555556, 0.11111111, 0.05555556, 0.02777778,\n","        0.05555556, 0.11111111, 0.05555556, 0.11111111],\n","       [0.11111111, 0.33333333, 0.11111111, 0.11111111, 0.05555556,\n","        0.11111111, 0.11111111, 0.11111111, 0.11111111],\n","       [0.11111111, 0.05555556, 0.11111111, 0.05555556, 0.02777778,\n","        0.05555556, 0.11111111, 0.05555556, 0.11111111],\n","       [0.11111111, 0.11111111, 0.11111111, 0.33333333, 0.05555556,\n","        0.11111111, 0.11111111, 0.11111111, 0.11111111],\n","       [0.11111111, 0.11111111, 0.11111111, 0.11111111, 0.66666667,\n","        0.11111111, 0.11111111, 0.11111111, 0.11111111],\n","       [0.11111111, 0.11111111, 0.11111111, 0.11111111, 0.05555556,\n","        0.33333333, 0.11111111, 0.11111111, 0.11111111],\n","       [0.11111111, 0.05555556, 0.11111111, 0.05555556, 0.02777778,\n","        0.05555556, 0.11111111, 0.05555556, 0.11111111],\n","       [0.11111111, 0.11111111, 0.11111111, 0.11111111, 0.05555556,\n","        0.11111111, 0.11111111, 0.33333333, 0.11111111],\n","       [0.11111111, 0.05555556, 0.11111111, 0.05555556, 0.02777778,\n","        0.05555556, 0.11111111, 0.05555556, 0.11111111]])"]},"metadata":{"tags":[]},"execution_count":77}]},{"metadata":{"id":"PPg0jBaEMAqv","colab_type":"text"},"cell_type":"markdown","source":["###Confirm using eigenvectors/eigenvalues "]},{"metadata":{"id":"Lw6MAqJuK1Ao","colab_type":"code","outputId":"71e71bdc-787d-4015-b7ee-769ecc77215f","executionInfo":{"status":"ok","timestamp":1556502121708,"user_tz":300,"elapsed":330,"user":{"displayName":"Zhaoliang Zhou","photoUrl":"","userId":"11420802199847110781"}},"colab":{"base_uri":"https://localhost:8080/","height":545}},"cell_type":"code","source":["eigenStuff1 = np.linalg.eig(matrix1)\n","eigenStuff1"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(array([1.00000000e+00, 6.50521303e-18, 2.22222222e-01, 5.55555556e-01,\n","        3.85768390e-17, 2.22222222e-01, 2.22222222e-01, 2.22222222e-01,\n","        4.85722573e-17]),\n"," array([[-1.66666667e-01, -8.66025404e-01,  3.53553391e-01,\n","         -7.80868809e-02,  3.29536526e-01, -1.18512705e-01,\n","          1.83933276e-01,  1.75985157e-01, -3.28339363e-02],\n","        [-3.33333333e-01,  1.61907524e-16, -3.53553391e-01,\n","         -1.56173762e-01, -1.46624318e-16,  8.16882993e-01,\n","          2.11320713e-01,  1.42178851e-01, -2.98312898e-18],\n","        [-1.66666667e-01,  2.88675135e-01,  3.53553391e-01,\n","         -7.80868809e-02,  6.45229574e-01, -1.18512705e-01,\n","          1.83933276e-01,  1.75985157e-01, -1.37179575e-01],\n","        [-3.33333333e-01,  8.55796915e-17, -3.53553391e-01,\n","         -1.56173762e-01, -1.49097801e-17, -4.85702797e-01,\n","          2.35172155e-01,  1.45490696e-01, -4.44020537e-17],\n","        [-6.66666667e-01, -7.86407976e-17, -5.39471421e-17,\n","          9.37042571e-01, -3.73330213e-17,  1.65022201e-16,\n","          4.65575986e-17,  1.79698920e-17,  3.40848144e-17],\n","        [-3.33333333e-01, -8.44232092e-17, -3.53553391e-01,\n","         -1.56173762e-01,  7.54466884e-17,  1.94739642e-01,\n","         -4.09615482e-01, -9.09984493e-01,  4.16058914e-17],\n","        [-1.66666667e-01,  2.88675135e-01,  3.53553391e-01,\n","         -7.80868809e-02, -4.87383050e-01, -1.18512705e-01,\n","          1.83933276e-01,  1.75985157e-01, -6.09849848e-01],\n","        [-3.33333333e-01, -5.31981866e-17, -3.53553391e-01,\n","         -1.56173762e-01, -1.34378644e-17, -5.18690159e-02,\n","         -7.72610490e-01, -8.16256827e-02,  6.55317208e-18],\n","        [-1.66666667e-01,  2.88675135e-01,  3.53553391e-01,\n","         -7.80868809e-02, -4.87383050e-01, -1.18512705e-01,\n","          1.83933276e-01,  1.75985157e-01,  7.79863359e-01]]))"]},"metadata":{"tags":[]},"execution_count":78}]},{"metadata":{"id":"pKH-EDqasSkV","colab_type":"code","outputId":"c40c7a3f-5b31-4356-eefa-7c3f5f74e175","executionInfo":{"status":"ok","timestamp":1556502123923,"user_tz":300,"elapsed":330,"user":{"displayName":"Zhaoliang Zhou","photoUrl":"","userId":"11420802199847110781"}},"colab":{"base_uri":"https://localhost:8080/","height":52}},"cell_type":"code","source":["eigVec1 = eigenStuff1[1][:,0]\n","eigVec1"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([-0.16666667, -0.33333333, -0.16666667, -0.33333333, -0.66666667,\n","       -0.33333333, -0.16666667, -0.33333333, -0.16666667])"]},"metadata":{"tags":[]},"execution_count":79}]},{"metadata":{"id":"0fCL4KS-sSm4","colab_type":"code","outputId":"a9b800fa-9a46-4aa4-e6c3-130359dd9a90","executionInfo":{"status":"ok","timestamp":1556502125295,"user_tz":300,"elapsed":333,"user":{"displayName":"Zhaoliang Zhou","photoUrl":"","userId":"11420802199847110781"}},"colab":{"base_uri":"https://localhost:8080/","height":52}},"cell_type":"code","source":["prob1 = eigVec1/np.sum(eigVec1)\n","prob1"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0.0625, 0.125 , 0.0625, 0.125 , 0.25  , 0.125 , 0.0625, 0.125 ,\n","       0.0625])"]},"metadata":{"tags":[]},"execution_count":80}]},{"metadata":{"id":"ZCPdW4AXLqKJ","colab_type":"code","outputId":"0f7e5441-ed50-4493-936a-00b1c8b72f6e","executionInfo":{"status":"ok","timestamp":1556502127325,"user_tz":300,"elapsed":301,"user":{"displayName":"Zhaoliang Zhou","photoUrl":"","userId":"11420802199847110781"}},"colab":{"base_uri":"https://localhost:8080/","height":35}},"cell_type":"code","source":["16*prob1"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1., 2., 1., 2., 4., 2., 1., 2., 1.])"]},"metadata":{"tags":[]},"execution_count":81}]},{"metadata":{"id":"inY8V70bLs9Y","colab_type":"code","outputId":"c470f85e-6447-4b49-b623-261fbd1013db","executionInfo":{"status":"ok","timestamp":1556502128798,"user_tz":300,"elapsed":310,"user":{"displayName":"Zhaoliang Zhou","photoUrl":"","userId":"11420802199847110781"}},"colab":{"base_uri":"https://localhost:8080/","height":35}},"cell_type":"code","source":["p1"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1, 2, 1, 2, 4, 2, 1, 2, 1])"]},"metadata":{"tags":[]},"execution_count":82}]},{"metadata":{"id":"hcMOTCGTMKfl","colab_type":"text"},"cell_type":"markdown","source":["It is confirmed that the steady-state is the same using eigenvectors/eigenvalues"]},{"metadata":{"id":"cLFoity5MRhK","colab_type":"text"},"cell_type":"markdown","source":["###Confirm using matrix power\n","\n","Starting with an arbitrary initial distribution (e.g.,  S1=1 , other  Si=0 ), calculate the distribution after a large number of steps"]},{"metadata":{"id":"uTG_jh5hNrXL","colab_type":"code","outputId":"82a9a019-7c23-423b-fcdc-211e8ffb47e3","executionInfo":{"status":"ok","timestamp":1556502133244,"user_tz":300,"elapsed":332,"user":{"displayName":"Zhaoliang Zhou","photoUrl":"","userId":"11420802199847110781"}},"colab":{"base_uri":"https://localhost:8080/","height":334}},"cell_type":"code","source":["matrix1"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0.11111111, 0.05555556, 0.11111111, 0.05555556, 0.02777778,\n","        0.05555556, 0.11111111, 0.05555556, 0.11111111],\n","       [0.11111111, 0.33333333, 0.11111111, 0.11111111, 0.05555556,\n","        0.11111111, 0.11111111, 0.11111111, 0.11111111],\n","       [0.11111111, 0.05555556, 0.11111111, 0.05555556, 0.02777778,\n","        0.05555556, 0.11111111, 0.05555556, 0.11111111],\n","       [0.11111111, 0.11111111, 0.11111111, 0.33333333, 0.05555556,\n","        0.11111111, 0.11111111, 0.11111111, 0.11111111],\n","       [0.11111111, 0.11111111, 0.11111111, 0.11111111, 0.66666667,\n","        0.11111111, 0.11111111, 0.11111111, 0.11111111],\n","       [0.11111111, 0.11111111, 0.11111111, 0.11111111, 0.05555556,\n","        0.33333333, 0.11111111, 0.11111111, 0.11111111],\n","       [0.11111111, 0.05555556, 0.11111111, 0.05555556, 0.02777778,\n","        0.05555556, 0.11111111, 0.05555556, 0.11111111],\n","       [0.11111111, 0.11111111, 0.11111111, 0.11111111, 0.05555556,\n","        0.11111111, 0.11111111, 0.33333333, 0.11111111],\n","       [0.11111111, 0.05555556, 0.11111111, 0.05555556, 0.02777778,\n","        0.05555556, 0.11111111, 0.05555556, 0.11111111]])"]},"metadata":{"tags":[]},"execution_count":83}]},{"metadata":{"id":"0vqWITB6NrZx","colab_type":"code","outputId":"78970106-1967-4e22-fcd1-6ebf149125dd","executionInfo":{"status":"ok","timestamp":1556502134608,"user_tz":300,"elapsed":327,"user":{"displayName":"Zhaoliang Zhou","photoUrl":"","userId":"11420802199847110781"}},"colab":{"base_uri":"https://localhost:8080/","height":52}},"cell_type":"code","source":["day1probs = matrix1[:,0]\n","day1probs"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0.11111111, 0.11111111, 0.11111111, 0.11111111, 0.11111111,\n","       0.11111111, 0.11111111, 0.11111111, 0.11111111])"]},"metadata":{"tags":[]},"execution_count":84}]},{"metadata":{"id":"e5uy20_vOeKq","colab_type":"code","outputId":"42610a61-184a-4c1c-e666-b1b518feb37c","executionInfo":{"status":"ok","timestamp":1556502135574,"user_tz":300,"elapsed":334,"user":{"displayName":"Zhaoliang Zhou","photoUrl":"","userId":"11420802199847110781"}},"colab":{"base_uri":"https://localhost:8080/","height":52}},"cell_type":"code","source":["day2probs = matrix1 @ day1probs\n","day2probs"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0.07716049, 0.12962963, 0.07716049, 0.12962963, 0.17283951,\n","       0.12962963, 0.07716049, 0.12962963, 0.07716049])"]},"metadata":{"tags":[]},"execution_count":85}]},{"metadata":{"id":"p5q-QW_oOi2e","colab_type":"code","outputId":"8cfb8ec2-b692-4111-8b76-6a87d70bd941","executionInfo":{"status":"ok","timestamp":1556502136411,"user_tz":300,"elapsed":305,"user":{"displayName":"Zhaoliang Zhou","photoUrl":"","userId":"11420802199847110781"}},"colab":{"base_uri":"https://localhost:8080/","height":52}},"cell_type":"code","source":["day3probs = matrix1 @ day2probs\n","day3probs"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0.06790123, 0.1303155 , 0.06790123, 0.1303155 , 0.20713306,\n","       0.1303155 , 0.06790123, 0.1303155 , 0.06790123])"]},"metadata":{"tags":[]},"execution_count":86}]},{"metadata":{"id":"RpCpJpgKOoZ9","colab_type":"code","outputId":"c4ee6ca9-4c96-4c1a-d425-efad932f2399","executionInfo":{"status":"ok","timestamp":1556502138314,"user_tz":300,"elapsed":330,"user":{"displayName":"Zhaoliang Zhou","photoUrl":"","userId":"11420802199847110781"}},"colab":{"base_uri":"https://localhost:8080/","height":35}},"cell_type":"code","source":["dayprobs = matrix1[:,0]\n","for i in range(99):\n","  dayprobs = matrix1 @ dayprobs\n","dayprobs*16"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1., 2., 1., 2., 4., 2., 1., 2., 1.])"]},"metadata":{"tags":[]},"execution_count":87}]},{"metadata":{"id":"0Y2RCGwTO2ek","colab_type":"code","outputId":"97c5e690-9e08-4493-c57d-8336b2e834dd","executionInfo":{"status":"ok","timestamp":1556502139895,"user_tz":300,"elapsed":296,"user":{"displayName":"Zhaoliang Zhou","photoUrl":"","userId":"11420802199847110781"}},"colab":{"base_uri":"https://localhost:8080/","height":35}},"cell_type":"code","source":["16*np.linalg.matrix_power(matrix1,100)[:,0]"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1., 2., 1., 2., 4., 2., 1., 2., 1.])"]},"metadata":{"tags":[]},"execution_count":88}]},{"metadata":{"id":"CUZItGaiPwHo","colab_type":"text"},"cell_type":"markdown","source":["## 2.  Only horizontal and vertical moves allowed."]},{"metadata":{"id":"iE3c6wLUeDJk","colab_type":"code","colab":{}},"cell_type":"code","source":["Q1 = np.array(([1/3, 1/4, 0, 1/4, 0, 0, 0, 0, 0],\n","              [1/3, 1/4, 1/3, 0, 1/5, 0, 0, 0, 0], \n","              [0, 1/4, 1/3, 0, 0, 1/4, 0, 0, 0] , \n","              [1/3, 0, 0, 1/4, 1/5, 0, 1/3, 0, 0],\n","             [0, 1/4, 0, 1/4, 1/5, 1/4, 0, 1/4,0],\n","             [0, 0, 1/3, 0, 1/5, 1/4, 0, 0, 1/3],\n","             [0, 0, 0, 1/4, 0, 0, 1/3, 1/4, 0],\n","             [0, 0, 0, 0, 1/5, 0, 1/3, 1/4, 1/3],\n","             [0, 0, 0, 0, 0, 1/4, 0, 1/4, 1/3]))"],"execution_count":0,"outputs":[]},{"metadata":{"id":"eZScRst3yCyy","colab_type":"code","outputId":"578c0723-3df8-4836-f0be-a1a4ac5ecece","executionInfo":{"status":"ok","timestamp":1556502562478,"user_tz":300,"elapsed":287,"user":{"displayName":"Zhaoliang Zhou","photoUrl":"","userId":"11420802199847110781"}},"colab":{"base_uri":"https://localhost:8080/","height":334}},"cell_type":"code","source":[""],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0.33333333, 0.25      , 0.        , 0.25      , 0.        ,\n","        0.        , 0.        , 0.        , 0.        ],\n","       [0.33333333, 0.25      , 0.33333333, 0.        , 0.2       ,\n","        0.        , 0.        , 0.        , 0.        ],\n","       [0.        , 0.25      , 0.33333333, 0.        , 0.        ,\n","        0.25      , 0.        , 0.        , 0.        ],\n","       [0.33333333, 0.        , 0.        , 0.25      , 0.2       ,\n","        0.        , 0.33333333, 0.        , 0.        ],\n","       [0.        , 0.25      , 0.        , 0.25      , 0.2       ,\n","        0.25      , 0.        , 0.25      , 0.        ],\n","       [0.        , 0.        , 0.33333333, 0.        , 0.2       ,\n","        0.25      , 0.        , 0.        , 0.33333333],\n","       [0.        , 0.        , 0.        , 0.25      , 0.        ,\n","        0.        , 0.33333333, 0.25      , 0.        ],\n","       [0.        , 0.        , 0.        , 0.        , 0.2       ,\n","        0.        , 0.33333333, 0.25      , 0.33333333],\n","       [0.        , 0.        , 0.        , 0.        , 0.        ,\n","        0.25      , 0.        , 0.25      , 0.33333333]])"]},"metadata":{"tags":[]},"execution_count":93}]},{"metadata":{"id":"IV8j7Jf6yEVR","colab_type":"code","colab":{}},"cell_type":"code","source":["def BTM(p):\n","  # fix the number of states\n","  n = len(p)\n","\n","  # define the proposal transition matrix Q\n","  Q = Q1\n","\n","  # define P initially as a copy of Q\n","  P = Q.copy()\n","\n","  # loop over all columns\n","  for j in range(n):\n","    # loop over all rows\n","    for i in range(n):\n","      # skip the diagonal entries (for now)\n","      if i != j:\n","        # change P[i,j] if p[i] < p[j]\n","        if p[i] < p[j]:\n","          P[i,j] = Q[j,i]*p[i]/p[j]\n","\n","  # now fix the diagonal entries of P\n","  for i in range(n):\n","    P[i,i] = 1 - (np.sum(P[:,i]) - P[i,i])\n","  \n","  # return the transition matrix\n","  return P"],"execution_count":0,"outputs":[]},{"metadata":{"id":"fT7IuPo8ySsI","colab_type":"code","colab":{}},"cell_type":"code","source":["matrix2 = BTM(p1)"],"execution_count":0,"outputs":[]},{"metadata":{"id":"KXbV9W9zzbvq","colab_type":"text"},"cell_type":"markdown","source":["Confirm using eigenvalues/eigenvector"]},{"metadata":{"id":"gY5o9ZkPytBp","colab_type":"code","outputId":"5f5f5069-4700-4b99-e70d-c153cf3092c7","executionInfo":{"status":"ok","timestamp":1556502749337,"user_tz":300,"elapsed":335,"user":{"displayName":"Zhaoliang Zhou","photoUrl":"","userId":"11420802199847110781"}},"colab":{"base_uri":"https://localhost:8080/","height":527}},"cell_type":"code","source":["eigenStuff2 = np.linalg.eig(matrix2)\n","eigenStuff2"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(array([-0.18957643,  1.        ,  0.33333333,  0.43957643,  0.03907259,\n","         0.03907259,  0.71092741,  0.71092741,  0.41666667]),\n"," array([[-2.29301746e-01,  1.66666667e-01,  5.00000000e-01,\n","         -1.76141788e-01,  3.21190766e-01, -8.08955228e-02,\n","         -3.74429897e-01,  1.22240987e-02, -7.51103355e-16],\n","        [ 3.59712368e-01,  3.33333333e-01, -6.78902235e-17,\n","         -5.61415497e-02, -5.51673692e-01, -3.12241429e-01,\n","         -4.24147529e-01,  4.37768673e-01, -5.00000000e-01],\n","        [-2.29301746e-01,  1.66666667e-01, -5.00000000e-01,\n","         -1.76141788e-01,  3.03735383e-01,  4.34597061e-01,\n","          3.65772256e-17,  3.74230302e-01, -1.73492510e-16],\n","        [ 3.59712368e-01,  3.33333333e-01,  2.99810167e-16,\n","         -5.61415497e-02, -1.54093023e-02,  4.55067687e-01,\n","         -4.24147529e-01, -4.10074190e-01,  5.00000000e-01],\n","        [-5.21642489e-01,  6.66666667e-01, -1.75430637e-15,\n","          9.29133353e-01, -1.05083436e-16,  1.18709674e-16,\n","          8.37384400e-16,  2.16437385e-16,  2.40900258e-15],\n","        [ 3.59712368e-01,  3.33333333e-01,  1.28356922e-18,\n","         -5.61415497e-02,  1.54093023e-02, -4.55067687e-01,\n","          4.24147529e-01,  4.10074190e-01,  5.00000000e-01],\n","        [-2.29301746e-01,  1.66666667e-01, -5.00000000e-01,\n","         -1.76141788e-01, -3.03735383e-01, -4.34597061e-01,\n","          1.95559814e-17, -3.74230302e-01, -2.31971424e-16],\n","        [ 3.59712368e-01,  3.33333333e-01, -2.17401703e-16,\n","         -5.61415497e-02,  5.51673692e-01,  3.12241429e-01,\n","          4.24147529e-01, -4.37768673e-01, -5.00000000e-01],\n","        [-2.29301746e-01,  1.66666667e-01,  5.00000000e-01,\n","         -1.76141788e-01, -3.21190766e-01,  8.08955228e-02,\n","          3.74429897e-01, -1.22240987e-02, -9.27304732e-16]]))"]},"metadata":{"tags":[]},"execution_count":100}]},{"metadata":{"id":"TTbZBDHDy2Bp","colab_type":"code","outputId":"444677c4-2592-450d-96c1-44da7d6c7be3","executionInfo":{"status":"ok","timestamp":1556502824452,"user_tz":300,"elapsed":309,"user":{"displayName":"Zhaoliang Zhou","photoUrl":"","userId":"11420802199847110781"}},"colab":{"base_uri":"https://localhost:8080/","height":52}},"cell_type":"code","source":["eigVec2 = eigenStuff2[1][:,1]\n","eigVec2"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0.16666667, 0.33333333, 0.16666667, 0.33333333, 0.66666667,\n","       0.33333333, 0.16666667, 0.33333333, 0.16666667])"]},"metadata":{"tags":[]},"execution_count":103}]},{"metadata":{"id":"cSaGkhJmzHHI","colab_type":"code","outputId":"6005ae2d-17be-4140-8407-94e6f913dd41","executionInfo":{"status":"ok","timestamp":1556502886050,"user_tz":300,"elapsed":323,"user":{"displayName":"Zhaoliang Zhou","photoUrl":"","userId":"11420802199847110781"}},"colab":{"base_uri":"https://localhost:8080/","height":52}},"cell_type":"code","source":["prob2 = eigVec2/np.sum(eigVec2)\n","prob2"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0.0625, 0.125 , 0.0625, 0.125 , 0.25  , 0.125 , 0.0625, 0.125 ,\n","       0.0625])"]},"metadata":{"tags":[]},"execution_count":105}]},{"metadata":{"id":"N3htgqwfzUId","colab_type":"code","outputId":"c24aab55-d697-48f3-c106-38377fca5876","executionInfo":{"status":"ok","timestamp":1556502895184,"user_tz":300,"elapsed":348,"user":{"displayName":"Zhaoliang Zhou","photoUrl":"","userId":"11420802199847110781"}},"colab":{"base_uri":"https://localhost:8080/","height":35}},"cell_type":"code","source":["16*prob2"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1., 2., 1., 2., 4., 2., 1., 2., 1.])"]},"metadata":{"tags":[]},"execution_count":106}]},{"metadata":{"id":"_9uxmD26zVip","colab_type":"code","outputId":"d61217f2-5d24-45bf-fdfd-f50a29c26e6a","executionInfo":{"status":"ok","timestamp":1556502899411,"user_tz":300,"elapsed":288,"user":{"displayName":"Zhaoliang Zhou","photoUrl":"","userId":"11420802199847110781"}},"colab":{"base_uri":"https://localhost:8080/","height":35}},"cell_type":"code","source":["p1"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1, 2, 1, 2, 4, 2, 1, 2, 1])"]},"metadata":{"tags":[]},"execution_count":107}]},{"metadata":{"id":"afOzaqDe8kyF","colab_type":"text"},"cell_type":"markdown","source":["It is confirmed that the transition matrix respects the moves and has correct steady-state distribution"]},{"metadata":{"id":"hxid6xdQ0nIn","colab_type":"text"},"cell_type":"markdown","source":["## 3. Horizontal, vertical, and diagonal moves are allowed"]},{"metadata":{"id":"4bJVX8nt8CS8","colab_type":"text"},"cell_type":"markdown","source":["Build proposal transition Q2 based on the rule. "]},{"metadata":{"id":"WWbEvui46WVp","colab_type":"code","outputId":"ccf34795-89f1-42e3-ca55-06db28e4c26a","executionInfo":{"status":"ok","timestamp":1556505016467,"user_tz":300,"elapsed":313,"user":{"displayName":"Zhaoliang Zhou","photoUrl":"","userId":"11420802199847110781"}},"colab":{"base_uri":"https://localhost:8080/","height":334}},"cell_type":"code","source":["Q2 = np.array(([0, 1/5, 0, 1/5, 1/8, 0, 0, 0, 0],\n","              [1/3, 0, 1/3, 1/5, 1/8, 1/5, 0, 0, 0], \n","              [0, 1/5, 0, 0, 1/8, 1/5, 0, 0, 0] , \n","              [1/3, 1/5, 0, 0, 1/8, 0, 1/3, 1/5, 0],\n","             [1/3, 1/5, 1/3, 1/5, 0, 1/5, 1/3, 1/5,1/3],\n","             [0, 1/5, 1/3, 0, 1/8, 0, 0, 1/5, 1/3],\n","             [0, 0, 0, 1/5, 1/8, 0, 0, 1/5, 0],\n","             [0, 0, 0, 1/5, 1/8, 1/5, 1/3, 0, 1/3],\n","             [0, 0, 0, 0, 1/8, 1/5, 0, 1/5, 0]))\n","Q2"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0.        , 0.2       , 0.        , 0.2       , 0.125     ,\n","        0.        , 0.        , 0.        , 0.        ],\n","       [0.33333333, 0.        , 0.33333333, 0.2       , 0.125     ,\n","        0.2       , 0.        , 0.        , 0.        ],\n","       [0.        , 0.2       , 0.        , 0.        , 0.125     ,\n","        0.2       , 0.        , 0.        , 0.        ],\n","       [0.33333333, 0.2       , 0.        , 0.        , 0.125     ,\n","        0.        , 0.33333333, 0.2       , 0.        ],\n","       [0.33333333, 0.2       , 0.33333333, 0.2       , 0.        ,\n","        0.2       , 0.33333333, 0.2       , 0.33333333],\n","       [0.        , 0.2       , 0.33333333, 0.        , 0.125     ,\n","        0.        , 0.        , 0.2       , 0.33333333],\n","       [0.        , 0.        , 0.        , 0.2       , 0.125     ,\n","        0.        , 0.        , 0.2       , 0.        ],\n","       [0.        , 0.        , 0.        , 0.2       , 0.125     ,\n","        0.2       , 0.33333333, 0.        , 0.33333333],\n","       [0.        , 0.        , 0.        , 0.        , 0.125     ,\n","        0.2       , 0.        , 0.2       , 0.        ]])"]},"metadata":{"tags":[]},"execution_count":111}]},{"metadata":{"id":"n_pi2Cdm7eXy","colab_type":"code","colab":{}},"cell_type":"code","source":["def BTM2(p):\n","  # fix the number of states\n","  n = len(p)\n","\n","  # define the proposal transition matrix Q\n","  Q = Q2\n","\n","  # define P initially as a copy of Q\n","  P = Q.copy()\n","\n","  # loop over all columns\n","  for j in range(n):\n","    # loop over all rows\n","    for i in range(n):\n","      # skip the diagonal entries (for now)\n","      if i != j:\n","        # change P[i,j] if p[i] < p[j]\n","        if p[i] < p[j]:\n","          P[i,j] = Q[j,i]*p[i]/p[j]\n","\n","  # now fix the diagonal entries of P\n","  for i in range(n):\n","    P[i,i] = 1 - (np.sum(P[:,i]) - P[i,i])\n","  \n","  # return the transition matrix\n","  return P"],"execution_count":0,"outputs":[]},{"metadata":{"id":"1Ft4dKnH7gfC","colab_type":"code","outputId":"93d64b25-4111-428a-d4f3-776bdc146b40","executionInfo":{"status":"ok","timestamp":1556505221486,"user_tz":300,"elapsed":363,"user":{"displayName":"Zhaoliang Zhou","photoUrl":"","userId":"11420802199847110781"}},"colab":{"base_uri":"https://localhost:8080/","height":334}},"cell_type":"code","source":["matrix3 = BTM2(p1) #transition matrix\n","matrix3"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0.        , 0.16666667, 0.        , 0.16666667, 0.08333333,\n","        0.        , 0.        , 0.        , 0.        ],\n","       [0.33333333, 0.06666667, 0.33333333, 0.2       , 0.1       ,\n","        0.2       , 0.        , 0.        , 0.        ],\n","       [0.        , 0.16666667, 0.        , 0.        , 0.08333333,\n","        0.16666667, 0.        , 0.        , 0.        ],\n","       [0.33333333, 0.2       , 0.        , 0.06666667, 0.1       ,\n","        0.        , 0.33333333, 0.2       , 0.        ],\n","       [0.33333333, 0.2       , 0.33333333, 0.2       , 0.26666667,\n","        0.2       , 0.33333333, 0.2       , 0.33333333],\n","       [0.        , 0.2       , 0.33333333, 0.        , 0.1       ,\n","        0.06666667, 0.        , 0.2       , 0.33333333],\n","       [0.        , 0.        , 0.        , 0.16666667, 0.08333333,\n","        0.        , 0.        , 0.16666667, 0.        ],\n","       [0.        , 0.        , 0.        , 0.2       , 0.1       ,\n","        0.2       , 0.33333333, 0.06666667, 0.33333333],\n","       [0.        , 0.        , 0.        , 0.        , 0.08333333,\n","        0.16666667, 0.        , 0.16666667, 0.        ]])"]},"metadata":{"tags":[]},"execution_count":125}]},{"metadata":{"id":"ghKdWgZL8O4V","colab_type":"text"},"cell_type":"markdown","source":["Confirm using eigenvalues/eigenvectors"]},{"metadata":{"id":"9IoMb1Dw7mpc","colab_type":"code","outputId":"4e59230e-07e6-4a94-b9b3-407ea9e2a24b","executionInfo":{"status":"ok","timestamp":1556505083116,"user_tz":300,"elapsed":367,"user":{"displayName":"Zhaoliang Zhou","photoUrl":"","userId":"11420802199847110781"}},"colab":{"base_uri":"https://localhost:8080/","height":545}},"cell_type":"code","source":["eigenStuff3 = np.linalg.eig(matrix3)\n","eigenStuff3"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(array([ 1.00000000e+00, -2.94830371e-17,  3.68329187e-01,  3.68329187e-01,\n","         6.66666667e-02, -3.33333333e-01, -3.33333333e-01, -3.01662521e-01,\n","        -3.01662521e-01]),\n"," array([[-1.66666667e-01, -5.00000000e-01,  3.81135922e-01,\n","         -6.22360657e-02, -1.19219810e-16,  3.63803438e-01,\n","          1.57255942e-01, -4.35358669e-01,  7.17702848e-02],\n","        [-3.33333333e-01,  1.71811183e-16,  4.21150453e-01,\n","         -4.84267829e-01, -2.23606798e-01, -2.42535625e-01,\n","         -5.55712945e-01,  3.93994180e-01, -4.53554810e-01],\n","        [-1.66666667e-01,  5.00000000e-01,  9.07200247e-16,\n","         -3.76020296e-01, -1.45713101e-16,  3.63803438e-01,\n","          1.57255942e-01,  6.57992510e-10,  4.29402139e-01],\n","        [-3.33333333e-01, -5.02334217e-17,  4.21150453e-01,\n","          3.46727672e-01, -2.23606798e-01, -2.42535625e-01,\n","          3.46038356e-01,  3.93994181e-01,  3.23652380e-01],\n","        [-6.66666667e-01, -3.30845393e-16,  1.14354316e-16,\n","         -5.17219837e-16,  8.94427191e-01, -4.85071250e-01,\n","         -2.09674589e-01,  1.64093528e-16,  7.75289023e-16],\n","        [-3.33333333e-01,  1.51985410e-16, -4.21150453e-01,\n","         -3.46727672e-01, -2.23606798e-01, -2.42535625e-01,\n","          3.46038356e-01, -3.93994181e-01, -3.23652380e-01],\n","        [-1.66666667e-01,  5.00000000e-01, -4.16134811e-16,\n","          3.76020296e-01, -1.32466455e-17,  3.63803438e-01,\n","          1.57255942e-01, -6.57993181e-10, -4.29402139e-01],\n","        [-3.33333333e-01,  2.63007712e-16, -4.21150453e-01,\n","          4.84267829e-01, -2.23606798e-01, -2.42535625e-01,\n","         -5.55712945e-01, -3.93994180e-01,  4.53554810e-01],\n","        [-1.66666667e-01, -5.00000000e-01, -3.81135922e-01,\n","          6.22360657e-02,  7.28565503e-17,  3.63803438e-01,\n","          1.57255942e-01,  4.35358669e-01, -7.17702848e-02]]))"]},"metadata":{"tags":[]},"execution_count":116}]},{"metadata":{"id":"uFzvTrMY7uyp","colab_type":"code","outputId":"7941f426-491f-4950-e103-ead3c96f7ea2","executionInfo":{"status":"ok","timestamp":1556505115254,"user_tz":300,"elapsed":299,"user":{"displayName":"Zhaoliang Zhou","photoUrl":"","userId":"11420802199847110781"}},"colab":{"base_uri":"https://localhost:8080/","height":52}},"cell_type":"code","source":["eigVec3 = eigenStuff3[1][:,0]\n","eigVec3"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([-0.16666667, -0.33333333, -0.16666667, -0.33333333, -0.66666667,\n","       -0.33333333, -0.16666667, -0.33333333, -0.16666667])"]},"metadata":{"tags":[]},"execution_count":118}]},{"metadata":{"id":"151AfiIK72-V","colab_type":"code","outputId":"d2bdb82a-9f3a-48f7-b42c-cec3864aac91","executionInfo":{"status":"ok","timestamp":1556505142437,"user_tz":300,"elapsed":384,"user":{"displayName":"Zhaoliang Zhou","photoUrl":"","userId":"11420802199847110781"}},"colab":{"base_uri":"https://localhost:8080/","height":52}},"cell_type":"code","source":["prob3 = eigVec3/np.sum(eigVec3)\n","prob3"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0.0625, 0.125 , 0.0625, 0.125 , 0.25  , 0.125 , 0.0625, 0.125 ,\n","       0.0625])"]},"metadata":{"tags":[]},"execution_count":121}]},{"metadata":{"id":"ze7IfRwR77gc","colab_type":"code","outputId":"aca0eddb-db1b-4e00-a693-4be29395d7d3","executionInfo":{"status":"ok","timestamp":1556505154390,"user_tz":300,"elapsed":304,"user":{"displayName":"Zhaoliang Zhou","photoUrl":"","userId":"11420802199847110781"}},"colab":{"base_uri":"https://localhost:8080/","height":35}},"cell_type":"code","source":["16*prob3"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1., 2., 1., 2., 4., 2., 1., 2., 1.])"]},"metadata":{"tags":[]},"execution_count":122}]},{"metadata":{"id":"DIIUTMwt7-13","colab_type":"code","outputId":"bc5662dd-fa57-46d1-dd3f-002237fddb87","executionInfo":{"status":"ok","timestamp":1556505164469,"user_tz":300,"elapsed":297,"user":{"displayName":"Zhaoliang Zhou","photoUrl":"","userId":"11420802199847110781"}},"colab":{"base_uri":"https://localhost:8080/","height":35}},"cell_type":"code","source":["p1"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1, 2, 1, 2, 4, 2, 1, 2, 1])"]},"metadata":{"tags":[]},"execution_count":123}]},{"metadata":{"id":"kNzcJX6Y8VEx","colab_type":"text"},"cell_type":"markdown","source":["It is confirmed that the transition matrix respects the moves and has correct steady-state distribution"]}]}